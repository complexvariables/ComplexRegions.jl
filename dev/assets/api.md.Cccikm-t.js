import{_ as r,C as d,c as o,o as p,j as e,a as l,aA as a,G as t,w as n}from"./chunks/framework.CnfbKpVw.js";const hi=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),h={name:"api.md"},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},S={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},P={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.182ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9362.4 1000","aria-hidden":"true"},L={class:"jldocstring custom-block",open:""},V={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.182ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9362.4 1000","aria-hidden":"true"},D={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},_s={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},Qs={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},Ps={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},Vs={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},Os={class:"jldocstring custom-block",open:""},Us={class:"jldocstring custom-block",open:""},Hs={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},Zs={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},Xs={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},Js={class:"jldocstring custom-block",open:""},$s={class:"jldocstring custom-block",open:""},Ks={class:"jldocstring custom-block",open:""},Ws={class:"jldocstring custom-block",open:""},Ys={class:"jldocstring custom-block",open:""},se={class:"jldocstring custom-block",open:""},ee={class:"jldocstring custom-block",open:""},ie={class:"jldocstring custom-block",open:""},te={class:"jldocstring custom-block",open:""},le={class:"jldocstring custom-block",open:""},ae={class:"jldocstring custom-block",open:""},ne={class:"jldocstring custom-block",open:""},oe={class:"jldocstring custom-block",open:""},pe={class:"jldocstring custom-block",open:""},re={class:"jldocstring custom-block",open:""},de={class:"jldocstring custom-block",open:""},he={class:"jldocstring custom-block",open:""},ge={class:"jldocstring custom-block",open:""},ke={class:"jldocstring custom-block",open:""},ue={class:"jldocstring custom-block",open:""},be={class:"jldocstring custom-block",open:""},ce={class:"jldocstring custom-block",open:""},me={class:"jldocstring custom-block",open:""},Te={class:"jldocstring custom-block",open:""},Ce={class:"jldocstring custom-block",open:""},ye={class:"jldocstring custom-block",open:""},Ee={class:"jldocstring custom-block",open:""},fe={class:"jldocstring custom-block",open:""},xe={class:"jldocstring custom-block",open:""},_e={class:"jldocstring custom-block",open:""},je={class:"jldocstring custom-block",open:""},ve={class:"jldocstring custom-block",open:""},Re={class:"jldocstring custom-block",open:""},Ae={class:"jldocstring custom-block",open:""},Fe={class:"jldocstring custom-block",open:""},Qe={class:"jldocstring custom-block",open:""},Se={class:"jldocstring custom-block",open:""},Pe={class:"jldocstring custom-block",open:""},Le={class:"jldocstring custom-block",open:""},Ve={class:"jldocstring custom-block",open:""},Be={class:"jldocstring custom-block",open:""},De={class:"jldocstring custom-block",open:""},Me={class:"jldocstring custom-block",open:""},Ie={class:"jldocstring custom-block",open:""},we={class:"jldocstring custom-block",open:""},Ne={class:"jldocstring custom-block",open:""},Oe={class:"jldocstring custom-block",open:""},Ue={class:"jldocstring custom-block",open:""},He={class:"jldocstring custom-block",open:""},ze={class:"jldocstring custom-block",open:""},Ze={class:"jldocstring custom-block",open:""},qe={class:"jldocstring custom-block",open:""},Xe={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Ge={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.639ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.88ex",height:"2.851ex",role:"img",focusable:"false",viewBox:"0 -977.5 10112.8 1260","aria-hidden":"true"},Je={class:"jldocstring custom-block",open:""},$e={class:"jldocstring custom-block",open:""},Ke={class:"jldocstring custom-block",open:""},We={class:"jldocstring custom-block",open:""},Ye={class:"jldocstring custom-block",open:""},si={class:"jldocstring custom-block",open:""},ei={class:"jldocstring custom-block",open:""},ii={class:"jldocstring custom-block",open:""},ti={class:"jldocstring custom-block",open:""};function li(ai,s,ni,oi,pi,ri){const i=d("Badge");return p(),o("div",null,[s[610]||(s[610]=e("h1",{id:"API-Reference",tabindex:"-1"},[l("API Reference "),e("a",{class:"header-anchor",href:"#API-Reference","aria-label":'Permalink to "API Reference {#API-Reference}"'},"​")],-1)),s[611]||(s[611]=e("h2",{id:"Exported-types",tabindex:"-1"},[l("Exported types "),e("a",{class:"header-anchor",href:"#Exported-types","aria-label":'Permalink to "Exported types {#Exported-types}"'},"​")],-1)),e("details",g,[e("summary",null,[s[0]||(s[0]=e("a",{id:"ComplexRegions.Annulus",href:"#ComplexRegions.Annulus"},[e("span",{class:"jlbinding"},"ComplexRegions.Annulus")],-1)),s[1]||(s[1]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Annulus</span></span></code></pre></div><p>Representation of the region between two circles.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[2]||(s[2]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L235-L238",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),e("details",k,[e("summary",null,[s[4]||(s[4]=e("a",{id:"ComplexRegions.Annulus-Union{Tuple{S}, Tuple{T}, Tuple{Circle{T}, Circle{S}}} where {T, S}",href:"#ComplexRegions.Annulus-Union{Tuple{S}, Tuple{T}, Tuple{Circle{T}, Circle{S}}} where {T, S}"},[e("span",{class:"jlbinding"},"ComplexRegions.Annulus")],-1)),s[5]||(s[5]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Annulus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(radouter,radinner)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Annulus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(radouter,radinner,center)</span></span></code></pre></div><p>Construct a concentric annulus of outer radius <code>radouter</code> and inner radius <code>radinner</code> centered at <code>center</code>. If the center is not given, the origin is used.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[6]||(s[6]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L254-L258",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),e("details",u,[e("summary",null,[s[8]||(s[8]=e("a",{id:"ComplexRegions.Arc",href:"#ComplexRegions.Arc"},[e("span",{class:"jlbinding"},"ComplexRegions.Arc")],-1)),s[9]||(s[9]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Arc{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnyComplex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the complex plane</span></span></code></pre></div><p>Each <code>Arc</code> type is parameterized according to the common type of its complex input arguments.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[10]||(s[10]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L2-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),e("details",b,[e("summary",null,[s[12]||(s[12]=e("a",{id:"ComplexRegions.Arc-Union{Tuple{T}, Tuple{Circle{T}, Real, Real}} where T",href:"#ComplexRegions.Arc-Union{Tuple{T}, Tuple{Circle{T}, Real, Real}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Arc")],-1)),s[13]||(s[13]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C, start, delta)</span></span></code></pre></div><p>Consruct an arc that is the part of the Circle <code>C</code> starting at parameter value <code>start</code> and ending at <code>start+delta</code>. The values are expressed in terms of fractions of a complete circle. The <code>start</code> value should be in [0,1), and <code>delta</code> should be in [-1,1].</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Arc(a, b, c)</span></span></code></pre></div><p>Construct the arc starting at point <code>a</code>, passing through <code>b</code>, and ending at <code>c</code>. If the three points are collinear, a <code>Segment</code> is returned instead.</p>',4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[14]||(s[14]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L15-L23",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),e("details",c,[e("summary",null,[s[16]||(s[16]=e("a",{id:"ComplexRegions.Circle",href:"#ComplexRegions.Circle"},[e("span",{class:"jlbinding"},"ComplexRegions.Circle")],-1)),s[17]||(s[17]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[19]||(s[19]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(zc, r, ccw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the circle with given center <code>zc</code>, radius <code>r</code>, and orientation (defaults to counterclockwise).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Circle(a, b, c)</span></span></code></pre></div><p>Construct the circle passing through the given three numbers. Orientation is determined so that the values are visited in the given order. If the three points are collinear (including when one of the given values is infinite), a <code>Line</code> is returned instead.</p>',4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[18]||(s[18]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L17-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),e("details",m,[e("summary",null,[s[20]||(s[20]=e("a",{id:"ComplexRegions.Circle-2",href:"#ComplexRegions.Circle-2"},[e("span",{class:"jlbinding"},"ComplexRegions.Circle")],-1)),s[21]||(s[21]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Circle{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnyComplex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the complex plane</span></span></code></pre></div><p>Each <code>Circle</code> type is parameterized according to the common type of its complex input arguments.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[22]||(s[22]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L2-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})]),e("details",T,[e("summary",null,[s[24]||(s[24]=e("a",{id:"ComplexRegions.CircularPolygon",href:"#ComplexRegions.CircularPolygon"},[e("span",{class:"jlbinding"},"ComplexRegions.CircularPolygon")],-1)),s[25]||(s[25]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) CircularPolygon</span></span></code></pre></div><p>Type for closed paths consisting entirely of arcs, segments, and rays.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[26]||(s[26]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L68-L71",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[26]})]),e("details",C,[e("summary",null,[s[28]||(s[28]=e("a",{id:"ComplexRegions.CircularPolygon-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T",href:"#ComplexRegions.CircularPolygon-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.CircularPolygon")],-1)),s[29]||(s[29]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CircularPolygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CircularPolygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a circular polygon from a (possibly closed) path, or from a vector of curves. The <code>tol</code> parameter is a tolerance used when checking continuity and closedness of the path.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[30]||(s[30]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L89-L93",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[30]})]),e("details",y,[e("summary",null,[s[32]||(s[32]=e("a",{id:"ComplexRegions.ClosedCurve",href:"#ComplexRegions.ClosedCurve"},[e("span",{class:"jlbinding"},"ComplexRegions.ClosedCurve")],-1)),s[33]||(s[33]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f,a,b; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default)</span></span></code></pre></div><p>Construct a <code>ClosedCurve</code> object from the complex-valued function <code>point</code> accepting an argument in the interval [0,1]. The constructor checks whether <code>f(0)≈f(1)</code> to tolerance <code>tol</code>. If <code>a</code> and <code>b</code> are given, they are the limits of the parameter in the call to the supplied <code>f</code>. However, the resulting object will be defined on [0,1], which is internally scaled to [a,b].</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ClosedCurve(f,df[,a,b]; tol=&lt;default&gt;)</span></span></code></pre></div><p>Construct a closed curve with point location and tangent given by the complex-valued functions <code>f</code> and <code>df</code>, respectively, optionally with given limits on the parameter.</p>`,4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[34]||(s[34]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L210-L217",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[34]})]),e("details",E,[e("summary",null,[s[36]||(s[36]=e("a",{id:"ComplexRegions.ClosedCurve-2",href:"#ComplexRegions.ClosedCurve-2"},[e("span",{class:"jlbinding"},"ComplexRegions.ClosedCurve")],-1)),s[37]||(s[37]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[39]||(s[39]=e("p",null,"(type) Smooth closed curve defined by an explicit function of a real paramerter in [0,1].",-1)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[38]||(s[38]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L198-L200",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[38]})]),e("details",f,[e("summary",null,[s[40]||(s[40]=e("a",{id:"ComplexRegions.ClosedPath",href:"#ComplexRegions.ClosedPath"},[e("span",{class:"jlbinding"},"ComplexRegions.ClosedPath")],-1)),s[41]||(s[41]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[43]||(s[43]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) ClosedPath</span></span></code></pre></div><p>Generic implementation of an <code>AbstractClosedPath</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[42]||(s[42]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L327-L330",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[42]})]),e("details",x,[e("summary",null,[s[44]||(s[44]=e("a",{id:"ComplexRegions.ClosedPath-Union{Tuple{AbstractVector{<:ComplexRegions.AbstractCurve{T}}}, Tuple{T}} where T",href:"#ComplexRegions.ClosedPath-Union{Tuple{AbstractVector{<:ComplexRegions.AbstractCurve{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.ClosedPath")],-1)),s[45]||(s[45]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Given a vector <code>c</code> of curves, or an existing path, construct a closed path. The path is checked for continuity (to tolerance <code>tol</code>) at all of the vertices.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[46]||(s[46]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L340-L344",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[46]})]),e("details",_,[e("summary",null,[s[48]||(s[48]=e("a",{id:"ComplexRegions.ConnectedRegion",href:"#ComplexRegions.ConnectedRegion"},[e("span",{class:"jlbinding"},"ComplexRegions.ConnectedRegion")],-1)),s[49]||(s[49]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[51]||(s[51]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) ConnectedRegion{N}</span></span></code></pre></div><p>Representation of a <code>N</code>-connected region in the extended complex plane.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[50]||(s[50]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L160-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[50]})]),e("details",j,[e("summary",null,[s[52]||(s[52]=e("a",{id:"ComplexRegions.ConnectedRegion-Union{Tuple{T}, Tuple{Union{Nothing, ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}, AbstractVector{<:Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}}} where T",href:"#ComplexRegions.ConnectedRegion-Union{Tuple{T}, Tuple{Union{Nothing, ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}, AbstractVector{<:Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.ConnectedRegion")],-1)),s[53]||(s[53]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConnectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outer, inner)</span></span></code></pre></div><p>Construct an open connected region by specifying its boundary components. The <code>outer</code> boundary could be <code>nothing</code> or a closed curve or path. The <code>inner</code> boundary should be a vector of one or more nonintersecting closed curves or paths. The defined region is interior to the outer boundary and exterior to all the components of the inner boundary, regardless of the orientations of the given curves.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[54]||(s[54]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L190-L193",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[54]})]),e("details",v,[e("summary",null,[s[56]||(s[56]=e("a",{id:"ComplexRegions.Curve",href:"#ComplexRegions.Curve"},[e("span",{class:"jlbinding"},"ComplexRegions.Curve")],-1)),s[57]||(s[57]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[59]||(s[59]=e("p",null,"(type) Smooth curve defined by an explicit function of a real paramerter in [0,1].",-1)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[58]||(s[58]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L115-L117",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[58]})]),e("details",R,[e("summary",null,[s[60]||(s[60]=e("a",{id:"ComplexRegions.Line",href:"#ComplexRegions.Line"},[e("span",{class:"jlbinding"},"ComplexRegions.Line")],-1)),s[61]||(s[61]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[63]||(s[63]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Line{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnyComplex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the complex plane</span></span></code></pre></div><p>Each <code>Line</code> type is parameterized according to the common type of its complex input arguments.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[62]||(s[62]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L3-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[62]})]),e("details",A,[e("summary",null,[s[64]||(s[64]=e("a",{id:"ComplexRegions.Line-Tuple{Number, Number}",href:"#ComplexRegions.Line-Tuple{Number, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.Line")],-1)),s[65]||(s[65]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[67]||(s[67]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b)</span></span></code></pre></div><p>Construct the line passing through the two given points.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Line(a, direction=z)</span></span></code></pre></div><p>Construct the line through the given point and parallel to the complex sign of the given <code>direction</code> value.</p>',4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[66]||(s[66]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L13-L20",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[66]})]),e("details",F,[e("summary",null,[s[68]||(s[68]=e("a",{id:"ComplexRegions.Möbius",href:"#ComplexRegions.Möbius"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[69]||(s[69]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[71]||(s[71]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Möbius</span></span></code></pre></div><p>Representation of a Möbius or bilinear transformation.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[70]||(s[70]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L3-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[70]})]),e("details",Q,[e("summary",null,[s[72]||(s[72]=e("a",{id:"ComplexRegions.Möbius-NTuple{4, Number}",href:"#ComplexRegions.Möbius-NTuple{4, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[73]||(s[73]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[81]||(s[81]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, c, d)</span></span></code></pre></div>',1)),e("p",null,[s[76]||(s[76]=l("Construct the ")),s[77]||(s[77]=e("code",null,"Möbius",-1)),s[78]||(s[78]=l(" map ")),e("mjx-container",S,[(p(),o("svg",P,s[74]||(s[74]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(742.8,0)"><path data-c="21A6" d="M95 155V109Q95 83 92 73T75 63Q61 63 58 74T54 130Q54 140 54 180T55 250Q55 421 57 425Q61 437 75 437Q88 437 91 428T95 393V345V270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H95V155Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2020.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2409.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2938.6,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3625.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4626,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5055,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5444,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5944,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6333,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6766,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7453.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8453.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8973.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[75]||(s[75]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"z"),e("mo",{stretchy:"false"},"↦"),e("mo",{stretchy:"false"},"("),e("mi",null,"a"),e("mi",null,"z"),e("mo",null,"+"),e("mi",null,"b"),e("mo",{stretchy:"false"},")"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",null,"/")]),e("mo",{stretchy:"false"},"("),e("mi",null,"c"),e("mi",null,"z"),e("mo",null,"+"),e("mi",null,"d"),e("mo",{stretchy:"false"},")")])],-1))]),s[79]||(s[79]=l(" from its coefficients."))]),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[80]||(s[80]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L17-L20",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[80]})]),e("details",L,[e("summary",null,[s[82]||(s[82]=e("a",{id:"ComplexRegions.Möbius-Tuple{AbstractMatrix}",href:"#ComplexRegions.Möbius-Tuple{AbstractMatrix}"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[83]||(s[83]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[93]||(s[93]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>',1)),e("p",null,[s[86]||(s[86]=l("Construct the ")),s[87]||(s[87]=e("code",null,"Möbius",-1)),s[88]||(s[88]=l(" map ")),e("mjx-container",V,[(p(),o("svg",B,s[84]||(s[84]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(742.8,0)"><path data-c="21A6" d="M95 155V109Q95 83 92 73T75 63Q61 63 58 74T54 130Q54 140 54 180T55 250Q55 421 57 425Q61 437 75 437Q88 437 91 428T95 393V345V270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H95V155Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2020.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2409.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2938.6,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3625.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4626,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5055,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5444,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5944,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6333,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6766,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7453.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8453.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8973.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[85]||(s[85]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"z"),e("mo",{stretchy:"false"},"↦"),e("mo",{stretchy:"false"},"("),e("mi",null,"a"),e("mi",null,"z"),e("mo",null,"+"),e("mi",null,"b"),e("mo",{stretchy:"false"},")"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",null,"/")]),e("mo",{stretchy:"false"},"("),e("mi",null,"c"),e("mi",null,"z"),e("mo",null,"+"),e("mi",null,"d"),e("mo",{stretchy:"false"},")")])],-1))]),s[89]||(s[89]=l(" from the matrix ")),s[90]||(s[90]=e("code",null,"[a b;c d]",-1)),s[91]||(s[91]=l("."))]),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[92]||(s[92]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L23-L26",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[92]})]),e("details",D,[e("summary",null,[s[94]||(s[94]=e("a",{id:"ComplexRegions.Möbius-Tuple{AbstractVector, AbstractVector}",href:"#ComplexRegions.Möbius-Tuple{AbstractVector, AbstractVector}"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[95]||(s[95]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[97]||(s[97]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the <code>Möbius</code> map that transforms the points <code>z[k]</code> to <code>w[k]</code> for k=1,2,3. Values of <code>Inf</code> are permitted in both vectors.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[96]||(s[96]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L29-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[96]})]),e("details",M,[e("summary",null,[s[98]||(s[98]=e("a",{id:"ComplexRegions.Möbius-Tuple{Number}",href:"#ComplexRegions.Möbius-Tuple{Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[99]||(s[99]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[101]||(s[101]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evaluate the <code>Möbius</code> map <code>f</code> at a real or complex value <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[100]||(s[100]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L68-L71",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[100]})]),e("details",I,[e("summary",null,[s[102]||(s[102]=e("a",{id:"ComplexRegions.Möbius-Union{Tuple{T}, Tuple{Union{Circle{T}, Line{T}}, Union{Circle{T}, Line{T}}}} where T",href:"#ComplexRegions.Möbius-Union{Tuple{T}, Tuple{Union{Circle{T}, Line{T}}, Union{Circle{T}, Line{T}}}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[103]||(s[103]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[105]||(s[105]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C1, C2)</span></span></code></pre></div><p>Construct a <code>Möbius</code> map that transforms the curve <code>C1</code> to <code>C2</code>. Both curves must be either a <code>Line</code> or <code>Circle</code>. (These maps are not uniquely determined.)</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[104]||(s[104]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L55-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[104]})]),e("details",w,[e("summary",null,[s[106]||(s[106]=e("a",{id:"ComplexRegions.Möbius-Union{Tuple{Union{Arc{T}, Segment{T}}}, Tuple{T}} where T",href:"#ComplexRegions.Möbius-Union{Tuple{Union{Arc{T}, Segment{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[107]||(s[107]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[109]||(s[109]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Arc,Segment}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the image of the arc or segment <code>C</code> under the <code>Möbius</code> map <code>f</code>. The result is also either an <code>Arc</code> or a <code>Segment</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[108]||(s[108]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L89-L92",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[108]})]),e("details",N,[e("summary",null,[s[110]||(s[110]=e("a",{id:"ComplexRegions.Möbius-Union{Tuple{Union{Circle{T}, Line{T}}}, Tuple{T}} where T",href:"#ComplexRegions.Möbius-Union{Tuple{Union{Circle{T}, Line{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[111]||(s[111]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[113]||(s[113]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Circle,Line}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the image of the circle or line <code>C</code> under the <code>Möbius</code> map <code>f</code>. The result is also either a <code>Circle</code> or a <code>Line</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[112]||(s[112]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L83-L86",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[112]})]),e("details",O,[e("summary",null,[s[114]||(s[114]=e("a",{id:"ComplexRegions.Möbius-Union{Tuple{Union{ComplexRegions.ExteriorSimplyConnectedRegion{T, Circle{T}}, ComplexRegions.ExteriorSimplyConnectedRegion{T, Line{T}} where T, ComplexRegions.InteriorSimplyConnectedRegion{T, Circle{T}} where T, ComplexRegions.InteriorSimplyConnectedRegion{T, Line{T}} where T}}, Tuple{T}} where T",href:"#ComplexRegions.Möbius-Union{Tuple{Union{ComplexRegions.ExteriorSimplyConnectedRegion{T, Circle{T}}, ComplexRegions.ExteriorSimplyConnectedRegion{T, Line{T}} where T, ComplexRegions.InteriorSimplyConnectedRegion{T, Circle{T}} where T, ComplexRegions.InteriorSimplyConnectedRegion{T, Line{T}} where T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Möbius")],-1)),s[115]||(s[115]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[117]||(s[117]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractDisk,AbstractHalfplane}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If <code>R</code> is an <code>AbstractDisk</code> or an <code>AbstractHalfplane</code>, find its image under the <code>Möbius</code> map <code>f</code>. The result is also either an <code>AbstractDisk</code> or an <code>AbstractHalfplane</code>.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Möbius transformation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9999999999999999im</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.666666666666666</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.666666666666667im</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9999999999999999im</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.666666666666666</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.6666666666666665im</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(upperhalfplane)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Disk interior to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.55112e-17</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.22045e-16im</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ans,unitdisk)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div>`,4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[116]||(s[116]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L95-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[116]})]),e("details",U,[e("summary",null,[s[118]||(s[118]=e("a",{id:"ComplexRegions.Path",href:"#ComplexRegions.Path"},[e("span",{class:"jlbinding"},"ComplexRegions.Path")],-1)),s[119]||(s[119]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[121]||(s[121]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Path</span></span></code></pre></div><p>Generic implementation of an <code>AbstractPath</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[120]||(s[120]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L282-L285",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[120]})]),e("details",H,[e("summary",null,[s[122]||(s[122]=e("a",{id:"ComplexRegions.Path-Union{Tuple{AbstractVector{<:ComplexRegions.AbstractCurve{T}}}, Tuple{T}} where T",href:"#ComplexRegions.Path-Union{Tuple{AbstractVector{<:ComplexRegions.AbstractCurve{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Path")],-1)),s[123]||(s[123]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[125]||(s[125]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Given a vector <code>c</code> of curves, construct a path. The path is checked for continuity (to tolerance <code>tol</code>) at the interior vertices.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[124]||(s[124]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L296-L299",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[124]})]),e("details",z,[e("summary",null,[s[126]||(s[126]=e("a",{id:"ComplexRegions.Polygon",href:"#ComplexRegions.Polygon"},[e("span",{class:"jlbinding"},"ComplexRegions.Polygon")],-1)),s[127]||(s[127]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[129]||(s[129]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Polygon</span></span></code></pre></div><p>Type for closed paths consisting entirely of segments and rays.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[128]||(s[128]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L121-L124",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[128]})]),e("details",Z,[e("summary",null,[s[130]||(s[130]=e("a",{id:"ComplexRegions.Polygon-Union{Tuple{Union{ComplexRegions.AbstractPath{T}, AbstractVector{<:ComplexRegions.AbstractCurve{T}}}}, Tuple{T}} where T",href:"#ComplexRegions.Polygon-Union{Tuple{Union{ComplexRegions.AbstractPath{T}, AbstractVector{<:ComplexRegions.AbstractCurve{T}}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.Polygon")],-1)),s[131]||(s[131]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[133]||(s[133]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractCurve}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a polygon from a (possibly closed) path, or from a vector of curves. The <code>tol</code> parameter is a tolerance used when checking continuity and closedness of the path.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[132]||(s[132]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L139-L143",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[132]})]),e("details",q,[e("summary",null,[s[134]||(s[134]=e("a",{id:"ComplexRegions.Ray",href:"#ComplexRegions.Ray"},[e("span",{class:"jlbinding"},"ComplexRegions.Ray")],-1)),s[135]||(s[135]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[137]||(s[137]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, θ, reverse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the ray starting at <code>a</code> and extending to infinity at the angle <code>θ</code>. If <code>reverse</code> is true, the ray is considered to extend from infinity to <code>a</code> at angle <code>-θ</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[136]||(s[136]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L16-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[136]})]),e("details",X,[e("summary",null,[s[138]||(s[138]=e("a",{id:"ComplexRegions.Ray-2",href:"#ComplexRegions.Ray-2"},[e("span",{class:"jlbinding"},"ComplexRegions.Ray")],-1)),s[139]||(s[139]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[141]||(s[141]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Ray{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnyComplex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the complex plane</span></span></code></pre></div><p>Each <code>Ray</code> type is parameterized according to the common type of its complex input arguments.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[140]||(s[140]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L2-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[140]})]),e("details",G,[e("summary",null,[s[142]||(s[142]=e("a",{id:"ComplexRegions.RegionIntersection",href:"#ComplexRegions.RegionIntersection"},[e("span",{class:"jlbinding"},"ComplexRegions.RegionIntersection")],-1)),s[143]||(s[143]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[145]||(s[145]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) RegionIntersection</span></span></code></pre></div><p>Representation of the intersection of two regions.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[144]||(s[144]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L42-L45",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[144]})]),e("details",J,[e("summary",null,[s[146]||(s[146]=e("a",{id:"ComplexRegions.RegionUnion",href:"#ComplexRegions.RegionUnion"},[e("span",{class:"jlbinding"},"ComplexRegions.RegionUnion")],-1)),s[147]||(s[147]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[149]||(s[149]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) RegionUnion</span></span></code></pre></div><p>Representation of the union of two regions.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[148]||(s[148]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L52-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[148]})]),e("details",$,[e("summary",null,[s[150]||(s[150]=e("a",{id:"ComplexRegions.Segment",href:"#ComplexRegions.Segment"},[e("span",{class:"jlbinding"},"ComplexRegions.Segment")],-1)),s[151]||(s[151]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[153]||(s[153]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) Segment{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the complex plane</span></span></code></pre></div><p>Each <code>Segment</code> type is parameterized according to the common type of its complex input arguments.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[152]||(s[152]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L2-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[152]})]),e("details",K,[e("summary",null,[s[154]||(s[154]=e("a",{id:"ComplexRegions.Segment-Tuple{Number, Number}",href:"#ComplexRegions.Segment-Tuple{Number, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.Segment")],-1)),s[155]||(s[155]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[157]||(s[157]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b)</span></span></code></pre></div><p>Consruct a segment that starts at value <code>a</code> and ends at <code>b</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[156]||(s[156]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L17-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[156]})]),e("details",W,[e("summary",null,[s[158]||(s[158]=e("a",{id:"ComplexValues.Polar-Tuple{ComplexRegions.AbstractCurve}",href:"#ComplexValues.Polar-Tuple{ComplexRegions.AbstractCurve}"},[e("span",{class:"jlbinding"},"ComplexValues.Polar")],-1)),s[159]||(s[159]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[161]||(s[161]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interpret a curve as having points of type Polar.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[160]||(s[160]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L7-L10",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[160]})]),e("details",Y,[e("summary",null,[s[162]||(s[162]=e("a",{id:"ComplexValues.Spherical-Tuple{ComplexRegions.AbstractCurve}",href:"#ComplexValues.Spherical-Tuple{ComplexRegions.AbstractCurve}"},[e("span",{class:"jlbinding"},"ComplexValues.Spherical")],-1)),s[163]||(s[163]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[165]||(s[165]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Spherical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interpret a curve as having points of type Spherical.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[164]||(s[164]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L11-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[164]})]),s[612]||(s[612]=e("h2",{id:"Exported-functions",tabindex:"-1"},[l("Exported functions "),e("a",{class:"header-anchor",href:"#Exported-functions","aria-label":'Permalink to "Exported functions {#Exported-functions}"'},"​")],-1)),e("details",ss,[e("summary",null,[s[166]||(s[166]=e("a",{id:"Base.:!-Union{Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}}, Tuple{S}, Tuple{T}} where {T, S}",href:"#Base.:!-Union{Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}}, Tuple{S}, Tuple{T}} where {T, S}"},[e("span",{class:"jlbinding"},"Base.:!")],-1)),s[167]||(s[167]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[169]||(s[169]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimplyConnectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the region complementary to <code>R</code>. This is not quite set complementation, as neither region includes its boundary. The complement is always simply connected in the extended plane.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[168]||(s[168]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L72-L75",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[168]})]),e("details",es,[e("summary",null,[s[170]||(s[170]=e("a",{id:"Base.:∘-Tuple{Möbius, Möbius}",href:"#Base.:∘-Tuple{Möbius, Möbius}"},[e("span",{class:"jlbinding"},"Base.:∘")],-1)),s[171]||(s[171]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[173]||(s[173]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">∘</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compose two <code>Möbius</code> transformations.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[172]||(s[172]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L129-L132",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[172]})]),e("details",is,[e("summary",null,[s[174]||(s[174]=e("a",{id:"Base.conj-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}",href:"#Base.conj-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}"},[e("span",{class:"jlbinding"},"Base.conj")],-1)),s[175]||(s[175]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[177]||(s[177]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">conj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X)</span></span></code></pre></div><p>Construct the complex conjugate of curve, path, or region <code>X</code>. (Reverses the orientation of a curve or path.)</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[176]||(s[176]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L67-L70",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[176]})]),e("details",ts,[e("summary",null,[s[178]||(s[178]=e("a",{id:"Base.in-Tuple{Number, ComplexRegions.AbstractRegion}",href:"#Base.in-Tuple{Number, ComplexRegions.AbstractRegion}"},[e("span",{class:"jlbinding"},"Base.in")],-1)),s[179]||(s[179]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[181]||(s[181]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">∈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R   (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> followed by tab)</span></span></code></pre></div><p>True if <code>z</code> is in the region <code>R</code>.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[180]||(s[180]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L26-L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[180]})]),e("details",ls,[e("summary",null,[s[182]||(s[182]=e("a",{id:"Base.intersect",href:"#Base.intersect"},[e("span",{class:"jlbinding"},"Base.intersect")],-1)),s[183]||(s[183]=l()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[185]||(s[185]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intersect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,c2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the intersection(s) of two curves. The result could be a vector of zero or more values, or a curve.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[184]||(s[184]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/intersections.jl#L1-L4",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[184]})]),e("details",as,[e("summary",null,[s[186]||(s[186]=e("a",{id:"Base.intersect-Union{Tuple{T}, Tuple{S}, Tuple{ComplexRegions.AbstractRegion{T}, ComplexRegions.AbstractRegion{S}}} where {S, T}",href:"#Base.intersect-Union{Tuple{T}, Tuple{S}, Tuple{ComplexRegions.AbstractRegion{T}, ComplexRegions.AbstractRegion{S}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.intersect")],-1)),s[187]||(s[187]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[189]||(s[189]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intersect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,R2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">R1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">∩</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R2    (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> followed by tab key)</span></span></code></pre></div><p>Create the region that is the intersection of <code>R1</code> and <code>R2</code>.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[188]||(s[188]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L62-L66",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[188]})]),e("details",ns,[e("summary",null,[s[190]||(s[190]=e("a",{id:"Base.inv-Tuple{Möbius}",href:"#Base.inv-Tuple{Möbius}"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[191]||(s[191]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[193]||(s[193]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Möbius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the inverse of a <code>Möbius</code> transformation. This is the functional inverse, not 1/f(z).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[192]||(s[192]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/mobius.jl#L123-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[192]})]),e("details",os,[e("summary",null,[s[194]||(s[194]=e("a",{id:"Base.inv-Tuple{Segment}",href:"#Base.inv-Tuple{Segment}"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[195]||(s[195]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[197]||(s[197]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S)</span></span></code></pre></div><p>Invert the segment <code>S</code> through the origin. In general the inverse is an <code>Arc</code>, though the result is a <code>Segment</code> if <code>S</code> would pass through the origin when extended.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[196]||(s[196]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L62-L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[196]})]),e("details",ps,[e("summary",null,[s[198]||(s[198]=e("a",{id:"Base.inv-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}",href:"#Base.inv-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[199]||(s[199]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[201]||(s[201]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X)</span></span></code></pre></div><p>Invert a curve, path, or region pointwise.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[200]||(s[200]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L62-L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[200]})]),e("details",rs,[e("summary",null,[s[202]||(s[202]=e("a",{id:"Base.inv-Union{Tuple{Arc{T}}, Tuple{T}} where T",href:"#Base.inv-Union{Tuple{Arc{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[203]||(s[203]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[205]||(s[205]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span></code></pre></div><p>Invert the arc <code>A</code> through the origin. In general the inverse is an <code>Arc</code>, though the result is a <code>Segment</code> if the arc&#39;s circle passes through the origin.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[204]||(s[204]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L97-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[204]})]),e("details",ds,[e("summary",null,[s[206]||(s[206]=e("a",{id:"Base.inv-Union{Tuple{Circle{T}}, Tuple{T}} where T",href:"#Base.inv-Union{Tuple{Circle{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[207]||(s[207]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[209]||(s[209]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C)</span></span></code></pre></div><p>Invert the circle <code>C</code> through the origin. In general the inverse is a <code>Circle</code>, though the result is a <code>Line</code> if <code>C</code> passes through the origin.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[208]||(s[208]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L89-L92",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[208]})]),e("details",hs,[e("summary",null,[s[210]||(s[210]=e("a",{id:"Base.inv-Union{Tuple{Line{T}}, Tuple{T}} where T",href:"#Base.inv-Union{Tuple{Line{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[211]||(s[211]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[213]||(s[213]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L)</span></span></code></pre></div><p>Invert a line <code>L</code> through the origin. In general the inverse is a <code>Circle</code> through the inverse of any three points on the line.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[212]||(s[212]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L80-L83",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[212]})]),e("details",gs,[e("summary",null,[s[214]||(s[214]=e("a",{id:"Base.inv-Union{Tuple{Ray{T}}, Tuple{T}} where T",href:"#Base.inv-Union{Tuple{Ray{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"Base.inv")],-1)),s[215]||(s[215]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[217]||(s[217]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R)</span></span></code></pre></div><p>Invert the ray <code>R</code> through the origin. In general the inverse is an <code>Arc</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[216]||(s[216]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L77-L80",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[216]})]),e("details",ks,[e("summary",null,[s[218]||(s[218]=e("a",{id:"Base.isapprox-Tuple{ComplexRegions.AbstractPath, ComplexRegions.AbstractPath}",href:"#Base.isapprox-Tuple{ComplexRegions.AbstractPath, ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[219]||(s[219]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[221]||(s[221]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,R2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">P1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> P2       (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pprox&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> followed by tab key)</span></span></code></pre></div><p>Determine whether <code>P1</code> and <code>P2</code> represent the same path, up to tolerance <code>tol</code>, irrespective of the parameterization of its curves.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[220]||(s[220]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L166-L170",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[220]})]),e("details",us,[e("summary",null,[s[222]||(s[222]=e("a",{id:"Base.isapprox-Union{Tuple{R}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{SimplyConnectedRegion{T, U}, SimplyConnectedRegion{S, R}}} where {S, T, U, R}",href:"#Base.isapprox-Union{Tuple{R}, Tuple{U}, Tuple{T}, Tuple{S}, Tuple{SimplyConnectedRegion{T, U}, SimplyConnectedRegion{S, R}}} where {S, T, U, R}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[223]||(s[223]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[225]||(s[225]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimplyConnectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimplyConnectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether <code>R1</code> and <code>R2</code> represent the same region, up to tolerance <code>tol</code>. Equivalently, determine whether their boundaries are the same.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[224]||(s[224]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L84-L87",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[224]})]),e("details",bs,[e("summary",null,[s[226]||(s[226]=e("a",{id:"Base.isapprox-Union{Tuple{S}, Tuple{T}, Tuple{Line{T}, Line{S}}} where {T, S}",href:"#Base.isapprox-Union{Tuple{S}, Tuple{T}, Tuple{Line{T}, Line{S}}} where {T, S}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[227]||(s[227]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[229]||(s[229]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, L2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L2</span></span></code></pre></div><p>Determine if <code>L1</code> and <code>L2</code> represent the same line, irrespective of the type or values of its parameters. Identity is determined by agreement within <code>tol</code>, which is interpreted as the weaker of absolute and relative differences.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[228]||(s[228]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L96-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[228]})]),e("details",cs,[e("summary",null,[s[230]||(s[230]=e("a",{id:"Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Arc{S}, Arc{T}}} where {S, T}",href:"#Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Arc{S}, Arc{T}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[231]||(s[231]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[233]||(s[233]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,A2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A2</span></span></code></pre></div><p>Determine if <code>A1</code> and <code>A2</code> represent the same arc, irrespective of the type or values of its parameters. Identity is determined by agreement within <code>tol</code>, which is interpreted as the weaker of absolute and relative differences.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[232]||(s[232]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L112-L117",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[232]})]),e("details",ms,[e("summary",null,[s[234]||(s[234]=e("a",{id:"Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Circle{S}, Circle{T}}} where {S, T}",href:"#Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Circle{S}, Circle{T}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[235]||(s[235]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[237]||(s[237]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,C2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> C2</span></span></code></pre></div><p>Determine if <code>C1</code> and <code>C2</code> represent the same circle, irrespective of the type or values of its parameters. Identity is determined by agreement within <code>tol</code>, which is interpreted as the weaker of absolute and relative differences.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[236]||(s[236]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L103-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[236]})]),e("details",Ts,[e("summary",null,[s[238]||(s[238]=e("a",{id:"Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Ray{S}, Ray{T}}} where {S, T}",href:"#Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Ray{S}, Ray{T}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[239]||(s[239]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[241]||(s[241]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">R1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R2</span></span></code></pre></div><p>Determine if <code>R1</code> and <code>R2</code> represent the same segment, irrespective of the type or values of its parameters. Identity is determined by agreement within <code>tol</code>, which is interpreted as the weaker of absolute and relative differences.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[240]||(s[240]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L91-L95",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[240]})]),e("details",Cs,[e("summary",null,[s[242]||(s[242]=e("a",{id:"Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Segment{S}, Segment{T}}} where {S, T}",href:"#Base.isapprox-Union{Tuple{T}, Tuple{S}, Tuple{Segment{S}, Segment{T}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.isapprox")],-1)),s[243]||(s[243]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[245]||(s[245]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isapprox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,S2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">S1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S2</span></span></code></pre></div><p>Determine if <code>S1</code> and <code>S2</code> represent the same segment, irrespective of the type or values of its parameters. Identity is determined by agreement within <code>tol</code>, which is interpreted as the weaker of absolute and relative differences.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[244]||(s[244]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L78-L83",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[244]})]),e("details",ys,[e("summary",null,[s[246]||(s[246]=e("a",{id:"Base.isfinite-Tuple{ComplexRegions.AbstractCurve}",href:"#Base.isfinite-Tuple{ComplexRegions.AbstractCurve}"},[e("span",{class:"jlbinding"},"Base.isfinite")],-1)),s[247]||(s[247]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[249]||(s[249]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfinite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the curve is bounded in the complex plane (i.e., does not pass through infinity).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[248]||(s[248]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L22-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[248]})]),e("details",Es,[e("summary",null,[s[250]||(s[250]=e("a",{id:"Base.isfinite-Tuple{ComplexRegions.AbstractPath}",href:"#Base.isfinite-Tuple{ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"Base.isfinite")],-1)),s[251]||(s[251]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[253]||(s[253]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfinite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the path is bounded in the complex plane (i.e., does not pass through infinity).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[252]||(s[252]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L42-L45",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[252]})]),e("details",fs,[e("summary",null,[s[254]||(s[254]=e("a",{id:"Base.isfinite-Tuple{ComplexRegions.AbstractRegion}",href:"#Base.isfinite-Tuple{ComplexRegions.AbstractRegion}"},[e("span",{class:"jlbinding"},"Base.isfinite")],-1)),s[255]||(s[255]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[257]||(s[257]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfinite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the region is bounded in the complex plane.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[256]||(s[256]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L34-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[256]})]),e("details",xs,[e("summary",null,[s[258]||(s[258]=e("a",{id:"Base.reverse-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath}}",href:"#Base.reverse-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath}}"},[e("span",{class:"jlbinding"},"Base.reverse")],-1)),s[259]||(s[259]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[261]||(s[261]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X)</span></span></code></pre></div><p>Construct a curve or path identical to <code>X</code> except with opposite direction of parameterization.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[260]||(s[260]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L75-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[260]})]),e("details",_s,[e("summary",null,[s[262]||(s[262]=e("a",{id:"Base.truncate-Tuple{Union{CircularPolygon, Polygon}, Circle}",href:"#Base.truncate-Tuple{Union{CircularPolygon, Polygon}, Circle}"},[e("span",{class:"jlbinding"},"Base.truncate")],-1)),s[263]||(s[263]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[265]||(s[265]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{CircularPolygon,Polygon}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute a trucated form of the polygon by replacing each pair of rays incident at infinity with two segments connected by an arc along the given circle. This is <em>not</em> a true clipping of the polygon, as finite sides are not altered. The result is either a CircularPolygon or the original <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[264]||(s[264]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L220-L223",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[264]})]),e("details",js,[e("summary",null,[s[266]||(s[266]=e("a",{id:"Base.truncate-Tuple{Union{CircularPolygon, Polygon}}",href:"#Base.truncate-Tuple{Union{CircularPolygon, Polygon}}"},[e("span",{class:"jlbinding"},"Base.truncate")],-1)),s[267]||(s[267]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[269]||(s[269]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{CircularPolygon,Polygon}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply <code>truncate</code> to <code>P</code> using a circle that is centered at the centroid of its finite vertices, and a radius twice the maximum from the centroid to the finite vertices.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[268]||(s[268]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L211-L214",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[268]})]),e("details",vs,[e("summary",null,[s[270]||(s[270]=e("a",{id:"Base.union-Union{Tuple{T}, Tuple{S}, Tuple{ComplexRegions.AbstractRegion{T}, ComplexRegions.AbstractRegion{S}}} where {S, T}",href:"#Base.union-Union{Tuple{T}, Tuple{S}, Tuple{ComplexRegions.AbstractRegion{T}, ComplexRegions.AbstractRegion{S}}} where {S, T}"},[e("span",{class:"jlbinding"},"Base.union")],-1)),s[271]||(s[271]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[273]||(s[273]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,R2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">R1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">∪</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R2    (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">up&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> followed by tab key)</span></span></code></pre></div><p>Create the region that is the union of <code>R1</code> and <code>R2</code>.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[272]||(s[272]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L71-L75",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[272]})]),e("details",Rs,[e("summary",null,[s[274]||(s[274]=e("a",{id:"ComplexRegions.angles-Union{Tuple{ComplexRegions.AbstractClosedPath{T}}, Tuple{T}} where T",href:"#ComplexRegions.angles-Union{Tuple{ComplexRegions.AbstractClosedPath{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.angles")],-1)),s[275]||(s[275]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[277]||(s[277]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">angles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a vecrtor of the interior angles at the vertices of the path <code>P</code>. The length is one greater than the number of curves in <code>P</code>, and the first and last values are <code>NaN</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[276]||(s[276]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L237-L240",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[276]})]),e("details",As,[e("summary",null,[s[278]||(s[278]=e("a",{id:"ComplexRegions.angles-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T",href:"#ComplexRegions.angles-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.angles")],-1)),s[279]||(s[279]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[281]||(s[281]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">angles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a vecrtor of the interior angles at the vertices of the path <code>P</code>. The length is one greater than the number of curves in <code>P</code>, and the first and last values are <code>NaN</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[280]||(s[280]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L122-L125",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[280]})]),e("details",Fs,[e("summary",null,[s[282]||(s[282]=e("a",{id:"ComplexRegions.angles-Union{Tuple{Polygon{T}}, Tuple{T}} where T",href:"#ComplexRegions.angles-Union{Tuple{Polygon{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.angles")],-1)),s[283]||(s[283]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[285]||(s[285]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">angles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute a vector of interior angles at the vertices of the polygon <code>P</code>. At a finite vertex these lie in (0,2π]; at an infinite vertex, the angle is in [-2π,0].</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[284]||(s[284]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L254-L257",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[284]})]),e("details",Qs,[e("summary",null,[s[286]||(s[286]=e("a",{id:"ComplexRegions.arclength-Tuple{Path}",href:"#ComplexRegions.arclength-Tuple{Path}"},[e("span",{class:"jlbinding"},"ComplexRegions.arclength")],-1)),s[287]||(s[287]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[289]||(s[289]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arclength</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the arclength of the path <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[288]||(s[288]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L312-L315",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[288]})]),e("details",Ss,[e("summary",null,[s[290]||(s[290]=e("a",{id:"ComplexRegions.arclength-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath}}",href:"#ComplexRegions.arclength-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath}}"},[e("span",{class:"jlbinding"},"ComplexRegions.arclength")],-1)),s[291]||(s[291]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[293]||(s[293]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arclength</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X)</span></span></code></pre></div><p>Fetch or compute the arc length of the curve or path <code>X</code>.</p><p><strong>Example</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>julia&gt; ellipse = ClosedCurve( t-&gt;cos(t)+2im*sin(t), 0,2π );</span></span>
<span class="line"><span>julia&gt; arclength(ellipse)  # good to about 10 digits</span></span>
<span class="line"><span>9.688448219981513</span></span></code></pre></div>`,4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[292]||(s[292]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L80-L91",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[292]})]),e("details",Ps,[e("summary",null,[s[294]||(s[294]=e("a",{id:"ComplexRegions.arg-Tuple{Line, Number}",href:"#ComplexRegions.arg-Tuple{Line, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.arg")],-1)),s[295]||(s[295]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[297]||(s[297]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z)</span></span></code></pre></div><p>Find a parameter argument <code>t</code> such that <code>L(t)==z</code> is true. For an infinite <code>z</code>, return zero (but note that <code>L(1)</code> is also infinity).</p><p>This gives undefined results if <code>z</code> is not actually on the line.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[296]||(s[296]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L50-L56",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[296]})]),e("details",Ls,[e("summary",null,[s[298]||(s[298]=e("a",{id:"ComplexRegions.arg-Tuple{Ray, Number}",href:"#ComplexRegions.arg-Tuple{Ray, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.arg")],-1)),s[299]||(s[299]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[301]||(s[301]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,z)</span></span></code></pre></div><p>Find the parameter argument <code>t</code> such that <code>R(t)==z</code> is true.</p><p>This gives undefined results if <code>z</code> is not actually on the ray.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[300]||(s[300]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L47-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[300]})]),e("details",Vs,[e("summary",null,[s[302]||(s[302]=e("a",{id:"ComplexRegions.arg-Tuple{Segment, Number}",href:"#ComplexRegions.arg-Tuple{Segment, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.arg")],-1)),s[303]||(s[303]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[305]||(s[305]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,z)</span></span></code></pre></div><p>Find the parameter argument <code>t</code> such that <code>S(t)==z</code> is true.</p><p>This gives undefined results if <code>z</code> is not actually on the segment.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[304]||(s[304]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L44-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[304]})]),e("details",Bs,[e("summary",null,[s[306]||(s[306]=e("a",{id:"ComplexRegions.arg-Union{Tuple{T}, Tuple{Arc{T}, Number}} where T",href:"#ComplexRegions.arg-Union{Tuple{T}, Tuple{Arc{T}, Number}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.arg")],-1)),s[307]||(s[307]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[309]||(s[309]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,z)</span></span></code></pre></div><p>Find the parameter argument <code>t</code> such that <code>A(t)==z</code> is true.</p><p>This gives undefined results if <code>z</code> is not actually on the arc.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[308]||(s[308]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L66-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[308]})]),e("details",Ds,[e("summary",null,[s[310]||(s[310]=e("a",{id:"ComplexRegions.arg-Union{Tuple{T}, Tuple{Circle{T}, Number}} where T",href:"#ComplexRegions.arg-Union{Tuple{T}, Tuple{Circle{T}, Number}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.arg")],-1)),s[311]||(s[311]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[313]||(s[313]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,z)</span></span></code></pre></div><p>Find the parameter argument <code>t</code> such that <code>C(t)==z</code> is true.</p><p>This gives undefined results if <code>z</code> is not actually on the circle.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[312]||(s[312]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L66-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[312]})]),e("details",Ms,[e("summary",null,[s[314]||(s[314]=e("a",{id:"ComplexRegions.between-Union{Tuple{T}, Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}, Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}} where T",href:"#ComplexRegions.between-Union{Tuple{T}, Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}, Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.between")],-1)),s[315]||(s[315]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[317]||(s[317]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outer,inner)</span></span></code></pre></div><p>Construct the region interior to the closed curve or path <code>outer</code> and interior to <code>inner</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[316]||(s[316]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/regions.jl#L218-L221",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[316]})]),e("details",Is,[e("summary",null,[s[318]||(s[318]=e("a",{id:"ComplexRegions.closest-Tuple{Number, Arc}",href:"#ComplexRegions.closest-Tuple{Number, Arc}"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[319]||(s[319]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[321]||(s[321]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on arc <code>A</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[320]||(s[320]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L145-L149",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[320]})]),e("details",ws,[e("summary",null,[s[322]||(s[322]=e("a",{id:"ComplexRegions.closest-Tuple{Number, Circle}",href:"#ComplexRegions.closest-Tuple{Number, Circle}"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[323]||(s[323]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[325]||(s[325]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on circle <code>C</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[324]||(s[324]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L124-L127",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[324]})]),e("details",Ns,[e("summary",null,[s[326]||(s[326]=e("a",{id:"ComplexRegions.closest-Tuple{Number, ComplexRegions.AbstractPath}",href:"#ComplexRegions.closest-Tuple{Number, ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[327]||(s[327]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[329]||(s[329]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on the path <code>P</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[328]||(s[328]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L188-L191",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[328]})]),e("details",Os,[e("summary",null,[s[330]||(s[330]=e("a",{id:"ComplexRegions.closest-Tuple{Number, Line}",href:"#ComplexRegions.closest-Tuple{Number, Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[331]||(s[331]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[333]||(s[333]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on line <code>L</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[332]||(s[332]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L136-L140",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[332]})]),e("details",Us,[e("summary",null,[s[334]||(s[334]=e("a",{id:"ComplexRegions.closest-Tuple{Number, Segment}",href:"#ComplexRegions.closest-Tuple{Number, Segment}"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[335]||(s[335]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[337]||(s[337]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on segment <code>S</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[336]||(s[336]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L119-L123",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[336]})]),e("details",Hs,[e("summary",null,[s[338]||(s[338]=e("a",{id:"ComplexRegions.closest-Union{Tuple{T}, Tuple{Number, Ray{T}}} where T",href:"#ComplexRegions.closest-Union{Tuple{T}, Tuple{Number, Ray{T}}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.closest")],-1)),s[339]||(s[339]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[341]||(s[341]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on ray <code>R</code> that lies closest to <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[340]||(s[340]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L128-L132",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[340]})]),e("details",zs,[e("summary",null,[s[342]||(s[342]=e("a",{id:"ComplexRegions.curve-Tuple{ComplexRegions.AbstractClosedPath, Integer}",href:"#ComplexRegions.curve-Tuple{ComplexRegions.AbstractClosedPath, Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.curve")],-1)),s[343]||(s[343]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[345]||(s[345]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">curve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractClosedPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <code>k</code>th curve in the path <code>P</code>. The index is applied circularly; e.g, if the closed path has n curves, then ...,1-n,1,1+n,... all refer to the first curve.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[344]||(s[344]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L219-L222",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[344]})]),e("details",Zs,[e("summary",null,[s[346]||(s[346]=e("a",{id:"ComplexRegions.curve-Tuple{ComplexRegions.AbstractPath, Integer}",href:"#ComplexRegions.curve-Tuple{ComplexRegions.AbstractPath, Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.curve")],-1)),s[347]||(s[347]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[349]||(s[349]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">curve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <code>k</code>th curve in the path <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[348]||(s[348]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L12-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[348]})]),e("details",qs,[e("summary",null,[s[350]||(s[350]=e("a",{id:"ComplexRegions.curves-Tuple{ComplexRegions.AbstractPath}",href:"#ComplexRegions.curves-Tuple{ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"ComplexRegions.curves")],-1)),s[351]||(s[351]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[353]||(s[353]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">curves</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return an array of the curves that make up the path <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[352]||(s[352]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L5-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[352]})]),e("details",Xs,[e("summary",null,[s[354]||(s[354]=e("a",{id:"ComplexRegions.discretize-Union{Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}}, Tuple{S}, Tuple{T}, Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}, Any}} where {T, S}",href:"#ComplexRegions.discretize-Union{Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}}, Tuple{S}, Tuple{T}, Tuple{ComplexRegions.InteriorSimplyConnectedRegion{T, S}, Any}} where {T, S}"},[e("span",{class:"jlbinding"},"ComplexRegions.discretize")],-1)),s[355]||(s[355]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[357]||(s[357]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">discretize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimplyConnectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an <code>n</code>×<code>n</code> grid of points on <code>P</code>. Points lying outside of <code>P</code> have a value of <code>NaN</code>.</p><p>If <code>P</code> is an exterior region, the points lie in a box a bit larger than the bounding box of <code>P</code>.</p><p>If keyword argument <code>limits</code> is specified, it must be a vector or tuple <code>(xmin, xmax, ymin, ymax)</code> specifying the limits of the grid.</p>',4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[356]||(s[356]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/discretize.jl#L112-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[356]})]),e("details",Gs,[e("summary",null,[s[358]||(s[358]=e("a",{id:"ComplexRegions.discretize-Union{Tuple{T}, Tuple{ComplexRegions.AbstractClosedCurve{T}, Integer}} where T",href:"#ComplexRegions.discretize-Union{Tuple{T}, Tuple{ComplexRegions.AbstractClosedCurve{T}, Integer}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.discretize")],-1)),s[359]||(s[359]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[361]||(s[361]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">discretize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, n)</span></span></code></pre></div><p>Discretize a path or curve at <code>n</code> points, roughly equidistributed by arc length. All vertices are also included.</p><p>Returns a tuple of vectors <code>t</code> and <code>z</code> such that <code>z[j]</code> is the point on the curve at parameter value <code>t[j]</code>.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[360]||(s[360]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/discretize.jl#L63-L68",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[360]})]),e("details",Js,[e("summary",null,[s[362]||(s[362]=e("a",{id:"ComplexRegions.disk-Tuple{Circle}",href:"#ComplexRegions.disk-Tuple{Circle}"},[e("span",{class:"jlbinding"},"ComplexRegions.disk")],-1)),s[363]||(s[363]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[365]||(s[365]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the disk interior to <code>C</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[364]||(s[364]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L98-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[364]})]),e("details",$s,[e("summary",null,[s[366]||(s[366]=e("a",{id:"ComplexRegions.disk-Tuple{Number, Real}",href:"#ComplexRegions.disk-Tuple{Number, Real}"},[e("span",{class:"jlbinding"},"ComplexRegions.disk")],-1)),s[367]||(s[367]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[369]||(s[369]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,radius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the disk with the given <code>center</code> and <code>radius</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[368]||(s[368]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L103-L106",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[368]})]),e("details",Ks,[e("summary",null,[s[370]||(s[370]=e("a",{id:"ComplexRegions.dist-Tuple{Number, Arc}",href:"#ComplexRegions.dist-Tuple{Number, Arc}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[371]||(s[371]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[373]||(s[373]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance from number <code>z</code> to the arc <code>A</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[372]||(s[372]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/arcs.jl#L129-L133",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[372]})]),e("details",Ws,[e("summary",null,[s[374]||(s[374]=e("a",{id:"ComplexRegions.dist-Tuple{Number, Circle}",href:"#ComplexRegions.dist-Tuple{Number, Circle}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[375]||(s[375]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[377]||(s[377]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance from number <code>z</code> to the circle <code>C</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[376]||(s[376]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L118-L121",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[376]})]),e("details",Ys,[e("summary",null,[s[378]||(s[378]=e("a",{id:"ComplexRegions.dist-Tuple{Number, ComplexRegions.AbstractPath}",href:"#ComplexRegions.dist-Tuple{Number, ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[379]||(s[379]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[381]||(s[381]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the distance from the path <code>P</code> to the point <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[380]||(s[380]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L182-L185",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[380]})]),e("details",se,[e("summary",null,[s[382]||(s[382]=e("a",{id:"ComplexRegions.dist-Tuple{Number, Line}",href:"#ComplexRegions.dist-Tuple{Number, Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[383]||(s[383]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[385]||(s[385]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance from number <code>z</code> to the line <code>L</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[384]||(s[384]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L129-L133",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[384]})]),e("details",ee,[e("summary",null,[s[386]||(s[386]=e("a",{id:"ComplexRegions.dist-Tuple{Number, Ray}",href:"#ComplexRegions.dist-Tuple{Number, Ray}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[387]||(s[387]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[389]||(s[389]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance from number <code>z</code> to the ray <code>R</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[388]||(s[388]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L122-L125",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[388]})]),e("details",ie,[e("summary",null,[s[390]||(s[390]=e("a",{id:"ComplexRegions.dist-Tuple{Number, Segment}",href:"#ComplexRegions.dist-Tuple{Number, Segment}"},[e("span",{class:"jlbinding"},"ComplexRegions.dist")],-1)),s[391]||(s[391]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[393]||(s[393]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance from number <code>z</code> to the segment <code>S</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[392]||(s[392]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L112-L116",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[392]})]),e("details",te,[e("summary",null,[s[394]||(s[394]=e("a",{id:"ComplexRegions.exterior-Union{Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}, Tuple{T}} where T",href:"#ComplexRegions.exterior-Union{Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.exterior")],-1)),s[395]||(s[395]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[397]||(s[397]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C)</span></span></code></pre></div><p>Construct the region exterior to the closed curve or path <code>C</code>. If <code>C</code> is bounded, the bounded enclosure is chosen regardless of the orientation of <code>C</code>; otherwise, the region &quot;to the right&quot; is the exterior.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[396]||(s[396]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L31-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[396]})]),e("details",le,[e("summary",null,[s[398]||(s[398]=e("a",{id:"ComplexRegions.halfplane-Tuple{Line}",href:"#ComplexRegions.halfplane-Tuple{Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.halfplane")],-1)),s[399]||(s[399]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[401]||(s[401]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">halfplane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the half-plane to the left of <code>L</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[400]||(s[400]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L134-L137",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[400]})]),e("details",ae,[e("summary",null,[s[402]||(s[402]=e("a",{id:"ComplexRegions.halfplane-Tuple{Number, Number}",href:"#ComplexRegions.halfplane-Tuple{Number, Number}"},[e("span",{class:"jlbinding"},"ComplexRegions.halfplane")],-1)),s[403]||(s[403]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[405]||(s[405]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">halfplane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a,b)</span></span></code></pre></div><p>Construct the half-plane to the left of the line from <code>a</code> to <code>b</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[404]||(s[404]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L139-L142",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[404]})]),e("details",ne,[e("summary",null,[s[406]||(s[406]=e("a",{id:"ComplexRegions.interior-Union{Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}, Tuple{T}} where T",href:"#ComplexRegions.interior-Union{Tuple{Union{ComplexRegions.AbstractClosedCurve{T}, ComplexRegions.AbstractClosedPath{T}}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.interior")],-1)),s[407]||(s[407]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[409]||(s[409]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">interior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C)</span></span></code></pre></div><p>Construct the region interior to the closed curve or path <code>C</code>. If <code>C</code> is bounded, the bounded enclosure is chosen regardless of the orientation of <code>C</code>; otherwise, the region &quot;to the left&quot; is the interior.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[408]||(s[408]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L17-L20",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[408]})]),e("details",oe,[e("summary",null,[s[410]||(s[410]=e("a",{id:"ComplexRegions.isinside-Tuple{Number, Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}",href:"#ComplexRegions.isinside-Tuple{Number, Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}"},[e("span",{class:"jlbinding"},"ComplexRegions.isinside")],-1)),s[411]||(s[411]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[413]||(s[413]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isinside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X,z)</span></span></code></pre></div><p>Detect whether <code>z</code> lies inside the closed curve or path <code>X</code>. For a bounded path, this always means the bounded region enclosed by the curve, regardless of orientation; for an unbounded path, it means the region &quot;to the left&quot; as one walks along the path.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[412]||(s[412]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L94-L97",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[412]})]),e("details",pe,[e("summary",null,[s[414]||(s[414]=e("a",{id:"ComplexRegions.isleft-Tuple{Number, Line}",href:"#ComplexRegions.isleft-Tuple{Number, Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.isleft")],-1)),s[415]||(s[415]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[417]||(s[417]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isleft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the left&quot; of line <code>L</code>. This means that the angle it makes with <code>tangent(L)</code> is in the interval (0,π).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the curve should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[416]||(s[416]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L109-L115",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[416]})]),e("details",re,[e("summary",null,[s[418]||(s[418]=e("a",{id:"ComplexRegions.isleft-Tuple{Number, Segment}",href:"#ComplexRegions.isleft-Tuple{Number, Segment}"},[e("span",{class:"jlbinding"},"ComplexRegions.isleft")],-1)),s[419]||(s[419]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[421]||(s[421]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isleft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the left&quot; of segment <code>S</code>. This means that the angle it makes with <code>tangent(S)</code> is in the interval (0,π).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the (extended) segment should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[420]||(s[420]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L89-L95",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[420]})]),e("details",de,[e("summary",null,[s[422]||(s[422]=e("a",{id:"ComplexRegions.isleft-Union{Tuple{T}, Tuple{Number, Ray{T}}} where T",href:"#ComplexRegions.isleft-Union{Tuple{T}, Tuple{Number, Ray{T}}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.isleft")],-1)),s[423]||(s[423]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[425]||(s[425]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isleft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the left&quot; of ray <code>R</code>. This means that the angle it makes with <code>tangent(R)</code> is in the interval (0,π).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the (extended) ray should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[424]||(s[424]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L100-L105",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[424]})]),e("details",he,[e("summary",null,[s[426]||(s[426]=e("a",{id:"ComplexRegions.isoutside-Tuple{Number, Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}",href:"#ComplexRegions.isoutside-Tuple{Number, Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}"},[e("span",{class:"jlbinding"},"ComplexRegions.isoutside")],-1)),s[427]||(s[427]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[429]||(s[429]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isoutside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X,z)</span></span></code></pre></div><p>Detect whether <code>z</code> lies outside the closed curve or path <code>X</code>. For a bounded path, this always means the unbounded region complementary to the enclosure of the curve, regardless of orientation; for an unbounded path, it means the region &quot;to the right&quot; as one walks along the path.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[428]||(s[428]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L99-L102",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[428]})]),e("details",ge,[e("summary",null,[s[430]||(s[430]=e("a",{id:"ComplexRegions.ispositive-Tuple{CircularPolygon}",href:"#ComplexRegions.ispositive-Tuple{CircularPolygon}"},[e("span",{class:"jlbinding"},"ComplexRegions.ispositive")],-1)),s[431]||(s[431]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[433]||(s[433]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispositive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CircularPolygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the circular polygon is positively oriented (i.e., circulates counterclockwise around the points it encloses).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[432]||(s[432]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L110-L113",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[432]})]),e("details",ke,[e("summary",null,[s[434]||(s[434]=e("a",{id:"ComplexRegions.ispositive-Tuple{Polygon}",href:"#ComplexRegions.ispositive-Tuple{Polygon}"},[e("span",{class:"jlbinding"},"ComplexRegions.ispositive")],-1)),s[435]||(s[435]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[437]||(s[437]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispositive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the polygon is positively oriented (i.e., circulates counterclockwise around the points it encloses).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[436]||(s[436]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L287-L290",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[436]})]),e("details",ue,[e("summary",null,[s[438]||(s[438]=e("a",{id:"ComplexRegions.isright-Tuple{Number, Line}",href:"#ComplexRegions.isright-Tuple{Number, Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.isright")],-1)),s[439]||(s[439]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[441]||(s[441]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the right&quot; of line <code>L</code>. This means that the angle it makes with <code>tangent(L)</code> is in the interval (-π,0).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the curve should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[440]||(s[440]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L118-L124",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[440]})]),e("details",be,[e("summary",null,[s[442]||(s[442]=e("a",{id:"ComplexRegions.isright-Tuple{Number, Ray}",href:"#ComplexRegions.isright-Tuple{Number, Ray}"},[e("span",{class:"jlbinding"},"ComplexRegions.isright")],-1)),s[443]||(s[443]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[445]||(s[445]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the right&quot; of ray <code>R</code>. This means that the angle it makes with <code>tangent(R)</code> is in the interval (-π,0).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the (extended) ray should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[444]||(s[444]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/rays.jl#L111-L116",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[444]})]),e("details",ce,[e("summary",null,[s[446]||(s[446]=e("a",{id:"ComplexRegions.isright-Tuple{Number, Segment}",href:"#ComplexRegions.isright-Tuple{Number, Segment}"},[e("span",{class:"jlbinding"},"ComplexRegions.isright")],-1)),s[447]||(s[447]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[449]||(s[449]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether the number <code>z</code> lies &quot;to the right&quot; of segment <code>S</code>. This means that the angle it makes with <code>tangent(S)</code> is in the interval (-π,0).</p><p>Note that <code>isleft</code> and <code>isright</code> are <em>not</em> logical opposites; a point on the (extended) segment should give <code>false</code> in both cases.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[448]||(s[448]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L100-L106",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[448]})]),e("details",me,[e("summary",null,[s[450]||(s[450]=e("a",{id:"ComplexRegions.n_gon-Tuple{Integer}",href:"#ComplexRegions.n_gon-Tuple{Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.n_gon")],-1)),s[451]||(s[451]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[453]||(s[453]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n_gon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n)</span></span></code></pre></div><p>Construct a regular n-gon with vertices on the unit circle.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[452]||(s[452]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L389-L392",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[452]})]),e("details",Te,[e("summary",null,[s[454]||(s[454]=e("a",{id:"ComplexRegions.normal-Tuple{ComplexRegions.AbstractCurve, Real}",href:"#ComplexRegions.normal-Tuple{ComplexRegions.AbstractCurve, Real}"},[e("span",{class:"jlbinding"},"ComplexRegions.normal")],-1)),s[455]||(s[455]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[457]||(s[457]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the unit complex number in the direction of the leftward-pointing normal to curve <code>C</code> at parameter value <code>t</code> in [0,1].</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[456]||(s[456]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L60-L63",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[456]})]),e("details",Ce,[e("summary",null,[s[458]||(s[458]=e("a",{id:"ComplexRegions.normal-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T",href:"#ComplexRegions.normal-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.normal")],-1)),s[459]||(s[459]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[461]||(s[461]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute a complex-valued normal to path <code>P</code> at parameter value <code>t</code>. Values of <code>t</code> in [k,k+1] correspond to values in [0,1] along curve k of the path, for k = 1,2,...,length(P)-1. The result is not well-defined at an integer value of <code>t</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[460]||(s[460]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L113-L116",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[460]})]),e("details",ye,[e("summary",null,[s[462]||(s[462]=e("a",{id:"ComplexRegions.plotdata-Tuple{ComplexRegions.AbstractCurve}",href:"#ComplexRegions.plotdata-Tuple{ComplexRegions.AbstractCurve}"},[e("span",{class:"jlbinding"},"ComplexRegions.plotdata")],-1)),s[463]||(s[463]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[465]||(s[465]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plotdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute points along the curve <code>C</code> suitable to make a nice plot of it.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[464]||(s[464]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L187-L191",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[464]})]),e("details",Ee,[e("summary",null,[s[466]||(s[466]=e("a",{id:"ComplexRegions.point-Tuple{ComplexRegions.AbstractCurve, Real}",href:"#ComplexRegions.point-Tuple{ComplexRegions.AbstractCurve, Real}"},[e("span",{class:"jlbinding"},"ComplexRegions.point")],-1)),s[467]||(s[467]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[469]||(s[469]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the point on curve <code>C</code> at parameter value <code>t</code>, which should lie in the interval [0,1].</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[468]||(s[468]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L8-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[468]})]),e("details",fe,[e("summary",null,[s[470]||(s[470]=e("a",{id:"ComplexRegions.point-Tuple{ComplexRegions.AbstractPath, AbstractArray{<:Real}}",href:"#ComplexRegions.point-Tuple{ComplexRegions.AbstractPath, AbstractArray{<:Real}}"},[e("span",{class:"jlbinding"},"ComplexRegions.point")],-1)),s[471]||(s[471]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[473]||(s[473]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t)</span></span></code></pre></div><p>Compute the point along path <code>P</code> at parameter value <code>t</code>. Values of <code>t</code> in [k,k+1] correspond to values in [0,1] along curve k of the path, for k = 1,2,...,length(P)-1.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>point(P::AbstractPath, t::AbstractVector)</span></span></code></pre></div><p>Vectorize the <code>point</code> method for path <code>P</code>.</p>`,4)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[472]||(s[472]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L66-L73",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[472]})]),e("details",xe,[e("summary",null,[s[474]||(s[474]=e("a",{id:"ComplexRegions.point-Union{Tuple{T}, Tuple{ComplexRegions.AbstractCurve, AbstractArray{T}}} where T<:Real",href:"#ComplexRegions.point-Union{Tuple{T}, Tuple{ComplexRegions.AbstractCurve, AbstractArray{T}}} where T<:Real"},[e("span",{class:"jlbinding"},"ComplexRegions.point")],-1)),s[475]||(s[475]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[477]||(s[477]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Vectorize the <code>point</code> function for curve <code>C</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[476]||(s[476]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L44-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[476]})]),e("details",_e,[e("summary",null,[s[478]||(s[478]=e("a",{id:"ComplexRegions.rectangle-Tuple{AbstractVector, AbstractVector}",href:"#ComplexRegions.rectangle-Tuple{AbstractVector, AbstractVector}"},[e("span",{class:"jlbinding"},"ComplexRegions.rectangle")],-1)),s[479]||(s[479]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[481]||(s[481]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xlim, ylim)</span></span></code></pre></div><p>Construct the rectangle defined by <code>xlim[1]</code> &lt; Re(z) &lt; <code>xlim[2]</code>, <code>ylim[1]</code> &lt; Im(z) &lt; <code>ylim[2]</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[480]||(s[480]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L370-L373",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[480]})]),e("details",je,[e("summary",null,[s[482]||(s[482]=e("a",{id:"ComplexRegions.rectangle-Tuple{AbstractVector{<:Number}}",href:"#ComplexRegions.rectangle-Tuple{AbstractVector{<:Number}}"},[e("span",{class:"jlbinding"},"ComplexRegions.rectangle")],-1)),s[483]||(s[483]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[485]||(s[485]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v)</span></span></code></pre></div><p>Construct the rectangle with vertices given in the vector <code>v</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[484]||(s[484]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L349-L352",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[484]})]),e("details",ve,[e("summary",null,[s[486]||(s[486]=e("a",{id:"ComplexRegions.rectangle-Tuple{Union{Complex{S}, Polar{S}, Spherical{S}} where S<:AbstractFloat, Union{Complex{S}, Polar{S}, Spherical{S}} where S<:AbstractFloat}",href:"#ComplexRegions.rectangle-Tuple{Union{Complex{S}, Polar{S}, Spherical{S}} where S<:AbstractFloat, Union{Complex{S}, Polar{S}, Spherical{S}} where S<:AbstractFloat}"},[e("span",{class:"jlbinding"},"ComplexRegions.rectangle")],-1)),s[487]||(s[487]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[489]||(s[489]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z1, z2)</span></span></code></pre></div><p>Construct the axes-aligned rectangle whose opposing corners are the given complex values.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[488]||(s[488]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/polygons.jl#L382-L385",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[488]})]),e("details",Re,[e("summary",null,[s[490]||(s[490]=e("a",{id:"ComplexRegions.reflect-Tuple{Number, Circle}",href:"#ComplexRegions.reflect-Tuple{Number, Circle}"},[e("span",{class:"jlbinding"},"ComplexRegions.reflect")],-1)),s[491]||(s[491]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[493]||(s[493]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reflect the value <code>z</code> across the circle <code>C</code>. (For reflection of a circle through a point, use translation and negation.)</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[492]||(s[492]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/circles.jl#L130-L133",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[492]})]),e("details",Ae,[e("summary",null,[s[494]||(s[494]=e("a",{id:"ComplexRegions.reflect-Tuple{Number, Line}",href:"#ComplexRegions.reflect-Tuple{Number, Line}"},[e("span",{class:"jlbinding"},"ComplexRegions.reflect")],-1)),s[495]||(s[495]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[497]||(s[497]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reflect the value <code>z</code> across the line <code>L</code>. (For reflection of a line through a point, use translation and negation.)</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[496]||(s[496]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/lines.jl#L146-L150",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[496]})]),e("details",Fe,[e("summary",null,[s[498]||(s[498]=e("a",{id:"ComplexRegions.reflect-Tuple{Number, Segment}",href:"#ComplexRegions.reflect-Tuple{Number, Segment}"},[e("span",{class:"jlbinding"},"ComplexRegions.reflect")],-1)),s[499]||(s[499]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[501]||(s[501]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reflect the value <code>z</code> across the extension of segment <code>S</code> to a line. (For reflection of a segment through a point, use translation and negation.)</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[500]||(s[500]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/segments.jl#L132-L136",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[500]})]),e("details",Qe,[e("summary",null,[s[502]||(s[502]=e("a",{id:"ComplexRegions.tangent-Tuple{ComplexRegions.AbstractCurve, Real}",href:"#ComplexRegions.tangent-Tuple{ComplexRegions.AbstractCurve, Real}"},[e("span",{class:"jlbinding"},"ComplexRegions.tangent")],-1)),s[503]||(s[503]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[505]||(s[505]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tangent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the complex number representing the tangent to curve <code>C</code> at parameter value <code>t</code> in [0,1].</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[504]||(s[504]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L14-L17",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[504]})]),e("details",Se,[e("summary",null,[s[506]||(s[506]=e("a",{id:"ComplexRegions.tangent-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T",href:"#ComplexRegions.tangent-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.tangent")],-1)),s[507]||(s[507]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[509]||(s[509]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tangent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the complex-valued tangent along path <code>P</code> at parameter value <code>t</code>. Values of <code>t</code> in [k,k+1] correspond to values in [0,1] along curve k of the path, for k = 1,2,...,length(P)-1. The result is not well-defined at an integer value of <code>t</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[508]||(s[508]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L95-L98",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[508]})]),e("details",Pe,[e("summary",null,[s[510]||(s[510]=e("a",{id:"ComplexRegions.unittangent-Tuple{ComplexRegions.AbstractCurve, Real}",href:"#ComplexRegions.unittangent-Tuple{ComplexRegions.AbstractCurve, Real}"},[e("span",{class:"jlbinding"},"ComplexRegions.unittangent")],-1)),s[511]||(s[511]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[513]||(s[513]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unittangent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Find the complex number representing the unit tangent to curve <code>C</code> at parameter value <code>t</code> in [0,1]. For Lines, Segments, and Rays, the <code>t</code> argument is optional.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[512]||(s[512]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L54-L57",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[512]})]),e("details",Le,[e("summary",null,[s[514]||(s[514]=e("a",{id:"ComplexRegions.unittangent-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T",href:"#ComplexRegions.unittangent-Union{Tuple{T}, Tuple{ComplexRegions.AbstractPath{T}, Real}} where T"},[e("span",{class:"jlbinding"},"ComplexRegions.unittangent")],-1)),s[515]||(s[515]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[517]||(s[517]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unittangent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the complex-valued unit tangent along path <code>P</code> at parameter value <code>t</code>. Values of <code>t</code> in [k,k+1] correspond to values in [0,1] along curve k of the path, for k = 1,2,...,length(P)-1. The result is not well-defined at an integer value of <code>t</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[516]||(s[516]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L104-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[516]})]),e("details",Ve,[e("summary",null,[s[518]||(s[518]=e("a",{id:"ComplexRegions.vertex-Tuple{ComplexRegions.AbstractClosedPath, Integer}",href:"#ComplexRegions.vertex-Tuple{ComplexRegions.AbstractClosedPath, Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.vertex")],-1)),s[519]||(s[519]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[521]||(s[521]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <code>k</code>th vertex of the path <code>P</code>. The index is applied circularly; e.g, if the closed path has n curves, then ...,1-n,1,1+n,... all refer to the first vertex.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[520]||(s[520]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L225-L228",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[520]})]),e("details",Be,[e("summary",null,[s[522]||(s[522]=e("a",{id:"ComplexRegions.vertex-Tuple{ComplexRegions.AbstractPath, Integer}",href:"#ComplexRegions.vertex-Tuple{ComplexRegions.AbstractPath, Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.vertex")],-1)),s[523]||(s[523]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[525]||(s[525]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <code>k</code>th vertex of the path <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[524]||(s[524]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L18-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[524]})]),e("details",De,[e("summary",null,[s[526]||(s[526]=e("a",{id:"ComplexRegions.vertices-Tuple{ComplexRegions.AbstractClosedPath}",href:"#ComplexRegions.vertices-Tuple{ComplexRegions.AbstractClosedPath}"},[e("span",{class:"jlbinding"},"ComplexRegions.vertices")],-1)),s[527]||(s[527]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[529]||(s[529]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractClosedPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return an array of the unique vertices (endpoints of the curves) of the closed path <code>P</code>. The length is equal the number of curves in <code>P</code>, i.e., the first/last vertex is not duplicated.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[528]||(s[528]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L231-L234",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[528]})]),e("details",Me,[e("summary",null,[s[530]||(s[530]=e("a",{id:"ComplexRegions.vertices-Tuple{ComplexRegions.AbstractPath}",href:"#ComplexRegions.vertices-Tuple{ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"ComplexRegions.vertices")],-1)),s[531]||(s[531]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[533]||(s[533]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return an array of the vertices (endpoints of the curves) of the path <code>P</code>. The length is one greater than the number of curves in <code>P</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[532]||(s[532]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L34-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[532]})]),e("details",Ie,[e("summary",null,[s[534]||(s[534]=e("a",{id:"ComplexRegions.winding-Tuple{Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}",href:"#ComplexRegions.winding-Tuple{Union{ComplexRegions.AbstractClosedCurve, ComplexRegions.AbstractClosedPath}}"},[e("span",{class:"jlbinding"},"ComplexRegions.winding")],-1)),s[535]||(s[535]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[537]||(s[537]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">winding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P,z)</span></span></code></pre></div><p>Compute the winding number of a closed curve or path <code>P</code> about the point <code>z</code>. Each counterclockwise rotation about <code>z</code> contributes +1, and each clockwise rotation about it counts -1. The winding number is zero for points not in the region enclosed by <code>P</code>.</p><p>The result is unreliable for points lying on <code>P</code>, for which the problem is ill-posed.</p>',3)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[536]||(s[536]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L16-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[536]})]),e("details",we,[e("summary",null,[s[538]||(s[538]=e("a",{id:"ComplexValues.real_type-Union{Tuple{ComplexRegions.AbstractCurve{T}}, Tuple{T}} where T",href:"#ComplexValues.real_type-Union{Tuple{ComplexRegions.AbstractCurve{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexValues.real_type")],-1)),s[539]||(s[539]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[541]||(s[541]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">real_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the type of the real part of the curve&#39;s point function.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[540]||(s[540]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L38-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[540]})]),e("details",Ne,[e("summary",null,[s[542]||(s[542]=e("a",{id:"ComplexValues.real_type-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T",href:"#ComplexValues.real_type-Union{Tuple{ComplexRegions.AbstractPath{T}}, Tuple{T}} where T"},[e("span",{class:"jlbinding"},"ComplexValues.real_type")],-1)),s[543]||(s[543]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[545]||(s[545]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">real_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the type of the real part of the curve&#39;s point function.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[544]||(s[544]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L54-L57",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[544]})]),e("details",Oe,[e("summary",null,[s[546]||(s[546]=e("a",{id:"ComplexRegions.PolygonalRegion",href:"#ComplexRegions.PolygonalRegion"},[e("span",{class:"jlbinding"},"ComplexRegions.PolygonalRegion")],-1)),s[547]||(s[547]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[549]||(s[549]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) PolygonalRegion</span></span></code></pre></div><p>Representation of a simply connected region bounded by a polygon.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[548]||(s[548]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L152-L155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[548]})]),e("details",Ue,[e("summary",null,[s[550]||(s[550]=e("a",{id:"ComplexRegions.SimplyConnectedRegion",href:"#ComplexRegions.SimplyConnectedRegion"},[e("span",{class:"jlbinding"},"ComplexRegions.SimplyConnectedRegion")],-1)),s[551]||(s[551]=l()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[553]||(s[553]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) SimplyConnectedRegion</span></span></code></pre></div><p>Representation of a simply connected region in the extended complex plane.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[552]||(s[552]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L11-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[552]})]),e("details",He,[e("summary",null,[s[554]||(s[554]=e("a",{id:"ComplexRegions.Shapes.ellipse-Tuple{Any, Any}",href:"#ComplexRegions.Shapes.ellipse-Tuple{Any, Any}"},[e("span",{class:"jlbinding"},"ComplexRegions.Shapes.ellipse")],-1)),s[555]||(s[555]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[557]||(s[557]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ellipse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b)</span></span></code></pre></div><p>Create an ellipse with semiaxes <code>a</code> and <code>b</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[556]||(s[556]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/shapes.jl#L13-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[556]})]),e("details",ze,[e("summary",null,[s[558]||(s[558]=e("a",{id:"ComplexRegions.Shapes.hypo-Tuple{Integer}",href:"#ComplexRegions.Shapes.hypo-Tuple{Integer}"},[e("span",{class:"jlbinding"},"ComplexRegions.Shapes.hypo")],-1)),s[559]||(s[559]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[561]||(s[561]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hypo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k)</span></span></code></pre></div><p>Create a hypocycloid with <code>k</code> cusps.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[560]||(s[560]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/shapes.jl#L26-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[560]})]),e("details",Ze,[e("summary",null,[s[562]||(s[562]=e("a",{id:"ComplexRegions.Shapes.spiral",href:"#ComplexRegions.Shapes.spiral"},[e("span",{class:"jlbinding"},"ComplexRegions.Shapes.spiral")],-1)),s[563]||(s[563]=l()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[565]||(s[565]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spiral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create the boundary of a spiral region with <code>n</code> complete turns and width <code>w</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[564]||(s[564]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/shapes.jl#L55-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[564]})]),e("details",qe,[e("summary",null,[s[566]||(s[566]=e("a",{id:"ComplexRegions.Shapes.squircle",href:"#ComplexRegions.Shapes.squircle"},[e("span",{class:"jlbinding"},"ComplexRegions.Shapes.squircle")],-1)),s[567]||(s[567]=l()),t(i,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[573]||(s[573]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">squircle</span></span></code></pre></div>',1)),e("p",null,[s[570]||(s[570]=l("Create a squircle whose sides are given by ")),e("mjx-container",Xe,[(p(),o("svg",Ge,s[568]||(s[568]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(1020,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)" style="stroke-width:3;"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1782.7,0)"><path data-c="2061" d="" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1782.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2171.7,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2640.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3029.7,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,67.5)"><path data-c="221A" d="M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z" style="stroke-width:3;"></path></g><rect width="3307.7" height="60" x="1020" y="857.5"></rect></g><g data-mml-node="mo" transform="translate(4549.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5550.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msqrt" transform="translate(5895.1,0)"><g transform="translate(1020,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" style="stroke-width:3;"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(394,0)" style="stroke-width:3;"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(672,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1672.7,0)"><path data-c="2061" d="" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1672.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2061.7,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2530.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2919.7,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(0,67.5)"><path data-c="221A" d="M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z" style="stroke-width:3;"></path></g><rect width="3197.7" height="60" x="1020" y="857.5"></rect></g></g></g>',1)]))),s[569]||(s[569]=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msqrt",null,[e("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),e("mi",null,"cos"),e("mo",{"data-mjx-texclass":"NONE"},"⁡"),e("mo",{stretchy:"false"},"("),e("mi",null,"θ"),e("mo",{stretchy:"false"},")"),e("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|")]),e("mo",null,"+"),e("mi",null,"i"),e("msqrt",null,[e("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),e("mi",null,"sin"),e("mo",{"data-mjx-texclass":"NONE"},"⁡"),e("mo",{stretchy:"false"},"("),e("mi",null,"θ"),e("mo",{stretchy:"false"},")"),e("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|")])])],-1))]),s[571]||(s[571]=l("."))]),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[572]||(s[572]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/shapes.jl#L49-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[572]})]),s[613]||(s[613]=e("h2",{id:"Others",tabindex:"-1"},[l("Others "),e("a",{class:"header-anchor",href:"#Others","aria-label":'Permalink to "Others {#Others}"'},"​")],-1)),e("details",Je,[e("summary",null,[s[574]||(s[574]=e("a",{id:"Base.:+-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}",href:"#Base.:+-Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}"},[e("span",{class:"jlbinding"},"Base.:+")],-1)),s[575]||(s[575]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[577]||(s[577]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X</span></span></code></pre></div><p>Translate a curve, path, or region <code>X</code> by a complex number <code>z</code>.</p>`,2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[576]||(s[576]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L25-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[576]})]),e("details",$e,[e("summary",null,[s[578]||(s[578]=e("a",{id:"Base.:--Tuple{Number, Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}",href:"#Base.:--Tuple{Number, Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}"},[e("span",{class:"jlbinding"},"Base.:-")],-1)),s[579]||(s[579]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[581]||(s[581]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X</span></span></code></pre></div><p>Negate a curve, path, or region <code>X</code> (reflect through the origin) and translate by <code>z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[580]||(s[580]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L41-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[580]})]),e("details",Ke,[e("summary",null,[s[582]||(s[582]=e("a",{id:"Base.:--Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}, Number}",href:"#Base.:--Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}, Number}"},[e("span",{class:"jlbinding"},"Base.:-")],-1)),s[583]||(s[583]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[585]||(s[585]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z</span></span></code></pre></div><p>Translate a curve, path, or region <code>X</code> by a number <code>-z</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[584]||(s[584]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L36-L39",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[584]})]),e("details",We,[e("summary",null,[s[586]||(s[586]=e("a",{id:"Base.:--Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}",href:"#Base.:--Tuple{Union{ComplexRegions.AbstractCurve, ComplexRegions.AbstractPath, ComplexRegions.AbstractRegion}}"},[e("span",{class:"jlbinding"},"Base.:-")],-1)),s[587]||(s[587]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[589]||(s[589]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X</span></span></code></pre></div><p>Negate a curve, path, or region <code>X</code> (reflect through the origin).</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[588]||(s[588]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L31-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[588]})]),e("details",Ye,[e("summary",null,[s[590]||(s[590]=e("a",{id:"Base.isreal-Tuple{ComplexRegions.AbstractPath}",href:"#Base.isreal-Tuple{ComplexRegions.AbstractPath}"},[e("span",{class:"jlbinding"},"Base.isreal")],-1)),s[591]||(s[591]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[593]||(s[593]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isreal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the path is entirely on the real axis.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[592]||(s[592]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L48-L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[592]})]),e("details",si,[e("summary",null,[s[594]||(s[594]=e("a",{id:"ComplexRegions.convert_real_type-Union{Tuple{S}, Tuple{Type{<:AbstractFloat}, Curve{S}}} where S",href:"#ComplexRegions.convert_real_type-Union{Tuple{S}, Tuple{Type{<:AbstractFloat}, Curve{S}}} where S"},[e("span",{class:"jlbinding"},"ComplexRegions.convert_real_type")],-1)),s[595]||(s[595]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[597]||(s[597]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_real_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Curve{S},ClosedCurve{S}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convert the floating-point type of the point and tangent functions of a <code>Curve</code> or <code>ClosedCurve</code> object.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[596]||(s[596]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/curves.jl#L161-L164",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[596]})]),e("details",ei,[e("summary",null,[s[598]||(s[598]=e("a",{id:"ComplexRegions.convert_real_type-Union{Tuple{S}, Tuple{Type{<:Real}, Path{S}}} where S",href:"#ComplexRegions.convert_real_type-Union{Tuple{S}, Tuple{Type{<:Real}, Path{S}}} where S"},[e("span",{class:"jlbinding"},"ComplexRegions.convert_real_type")],-1)),s[599]||(s[599]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[601]||(s[601]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_real_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Union{Path{S},ClosedPath{S}})</span></span></code></pre></div><p>Convert the floating-point type of the point and tangent functions of a <code>Path</code> or <code>ClosedPath</code> object.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[600]||(s[600]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/paths.jl#L318-L321",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[600]})]),e("details",ii,[e("summary",null,[s[602]||(s[602]=e("a",{id:"ComplexRegions.quad-Tuple{Rectangle}",href:"#ComplexRegions.quad-Tuple{Rectangle}"},[e("span",{class:"jlbinding"},"ComplexRegions.quad")],-1)),s[603]||(s[603]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[605]||(s[605]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the rectangle interior to <code>R</code>.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[604]||(s[604]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/simplyconnected.jl#L119-L122",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[604]})]),e("details",ti,[e("summary",null,[s[606]||(s[606]=e("a",{id:"Base.Complex-Tuple{ComplexRegions.AbstractCurve}",href:"#Base.Complex-Tuple{ComplexRegions.AbstractCurve}"},[e("span",{class:"jlbinding"},"Base.Complex")],-1)),s[607]||(s[607]=l()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[609]||(s[609]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interpret a curve as having points of type Complex.</p>',2)),t(i,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[608]||(s[608]=[e("a",{href:"https://github.com/complexvariables/ComplexRegions.jl/blob/27bab021db5f3f08bd9ae5252dbc34845e5b9621/src/docs.jl#L3-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[608]})])])}const gi=r(h,[["render",li]]);export{hi as __pageData,gi as default};
